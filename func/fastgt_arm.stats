Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 57.31     13.72    13.72 88754294     0.00     0.00  gte
 42.27     23.84    10.12   173345     0.00     0.00  mul_mo
  0.13     23.87     0.03   118264     0.00     0.00  highbit
  0.08     23.89     0.02    55563     0.00     0.00  subws
  0.04     23.90     0.01   116431     0.00     0.00  oddp
  0.04     23.91     0.01      915     0.00     0.03  spow_nn
  0.04     23.92     0.01      294     0.00     0.00  os2ip
  0.04     23.93     0.01      147     0.00     0.03  rsa_enc
  0.04     23.94     0.01        4     0.00     4.07  load_miller_rabin
  0.00     23.94     0.00   116739     0.00     0.00  half
  0.00     23.94     0.00     1970     0.00     0.00  copy
  0.00     23.94     0.00     1565     0.00     0.00  zero
  0.00     23.94     0.00     1547     0.00     0.00  equ
  0.00     23.94     0.00      938     0.00     0.00  zerop
  0.00     23.94     0.00      920     0.00     0.00  load
  0.00     23.94     0.00      730     0.00     0.00  addws
  0.00     23.94     0.00      641     0.00     0.00  subw
  0.00     23.94     0.00      421     0.00     0.00  evenp
  0.00     23.94     0.00      294     0.00     0.00  i2osp
  0.00     23.94     0.00      147     0.00     0.03  rsa_dec
  0.00     23.94     0.00      113     0.00     0.14  rabin_test
  0.00     23.94     0.00       42     0.00     0.00  sub_mo
  0.00     23.94     0.00       21     0.00     0.00  qdiv
  0.00     23.94     0.00        8     0.00     0.00  set
  0.00     23.94     0.00        4     0.00     0.00  mul
  0.00     23.94     0.00        2     0.00     0.00  euclid_inv
  0.00     23.94     0.00        1     0.00    16.28  genkeys
  0.00     23.94     0.00        1     0.00     0.00  print_num

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.04% of 23.94 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00   23.94                 msgtest [1]
                0.00   16.28       1/1           genkeys [4]
                0.01    3.82     147/147         rsa_enc [8]
                0.00    3.82     147/147         rsa_dec [9]
                0.00    0.00       1/118264      highbit [10]
                0.00    0.00       1/1           print_num [29]
-----------------------------------------------
                0.00    0.00      42/173345      euclid_inv [14]
                0.06    0.08    1019/173345      rabin_test [6]
               10.06   13.64  172284/173345      spow_nn [3]
[2]     99.6   10.12   13.72  173345         mul_mo [2]
               13.72    0.00 88752640/88754294     gte [7]
-----------------------------------------------
                0.00    3.82     147/915         rsa_enc [8]
                0.00    3.82     147/915         rsa_dec [9]
                0.01   16.12     621/915         rabin_test [6]
[3]     99.3    0.01   23.75     915         spow_nn [3]
               10.06   13.64  172284/173345      mul_mo [2]
                0.03    0.00  117346/118264      highbit [10]
                0.02    0.00   54938/55563       subws [11]
                0.01    0.00  116431/116431      oddp [12]
                0.00    0.00  116431/116739      half [18]
                0.00    0.00    1830/1970        copy [19]
                0.00    0.00     915/920         load [23]
                0.00    0.00     915/938         zerop [22]
-----------------------------------------------
                0.00   16.28       1/1           msgtest [1]
[4]     68.0    0.00   16.28       1         genkeys [4]
                0.01   16.27       4/4           load_miller_rabin [5]
                0.00    0.01       2/2           euclid_inv [14]
                0.00    0.00       4/55563       subws [11]
                0.00    0.00       9/1565        zero [20]
                0.00    0.00       4/4           mul [28]
                0.00    0.00       4/1970        copy [19]
                0.00    0.00       1/920         load [23]
-----------------------------------------------
                0.01   16.27       4/4           genkeys [4]
[5]     68.0    0.01   16.27       4         load_miller_rabin [5]
                0.00   16.27     113/113         rabin_test [6]
                0.00    0.00     109/730         addws [24]
                0.00    0.00       8/8           set [27]
                0.00    0.00       4/1565        zero [20]
                0.00    0.00       4/1970        copy [19]
-----------------------------------------------
                0.00   16.27     113/113         load_miller_rabin [5]
[6]     68.0    0.00   16.27     113         rabin_test [6]
                0.01   16.12     621/915         spow_nn [3]
                0.06    0.08    1019/173345      mul_mo [2]
                0.00    0.00     621/55563       subws [11]
                0.00    0.00     621/118264      highbit [10]
                0.00    0.00     621/88754294     gte [7]
                0.00    0.00    1547/1547        equ [21]
                0.00    0.00     960/1565        zero [20]
                0.00    0.00     641/641         subw [25]
                0.00    0.00     621/730         addws [24]
                0.00    0.00     421/421         evenp [26]
                0.00    0.00     308/116739      half [18]
-----------------------------------------------
                0.00    0.00      42/88754294     sub_mo [17]
                0.00    0.00     147/88754294     rsa_enc [8]
                0.00    0.00     147/88754294     rsa_dec [9]
                0.00    0.00     621/88754294     rabin_test [6]
                0.00    0.00     697/88754294     qdiv [15]
               13.72    0.00 88752640/88754294     mul_mo [2]
[7]     57.3   13.72    0.00 88754294         gte [7]
-----------------------------------------------
                0.01    3.82     147/147         msgtest [1]
[8]     16.0    0.01    3.82     147         rsa_enc [8]
                0.00    3.82     147/915         spow_nn [3]
                0.01    0.00     147/294         os2ip [13]
                0.00    0.00     147/294         i2osp [16]
                0.00    0.00     147/88754294     gte [7]
                0.00    0.00     294/1565        zero [20]
-----------------------------------------------
                0.00    3.82     147/147         msgtest [1]
[9]     16.0    0.00    3.82     147         rsa_dec [9]
                0.00    3.82     147/915         spow_nn [3]
                0.01    0.00     147/294         os2ip [13]
                0.00    0.00     147/294         i2osp [16]
                0.00    0.00     147/88754294     gte [7]
                0.00    0.00     294/1565        zero [20]
-----------------------------------------------
                0.00    0.00       1/118264      msgtest [1]
                0.00    0.00       2/118264      euclid_inv [14]
                0.00    0.00     294/118264      i2osp [16]
                0.00    0.00     621/118264      rabin_test [6]
                0.03    0.00  117346/118264      spow_nn [3]
[10]     0.1    0.03    0.00  118264         highbit [10]
-----------------------------------------------
                0.00    0.00       4/55563       genkeys [4]
                0.00    0.00     621/55563       rabin_test [6]
                0.02    0.00   54938/55563       spow_nn [3]
[11]     0.1    0.02    0.00   55563         subws [11]
-----------------------------------------------
                0.01    0.00  116431/116431      spow_nn [3]
[12]     0.0    0.01    0.00  116431         oddp [12]
-----------------------------------------------
                0.01    0.00     147/294         rsa_enc [8]
                0.01    0.00     147/294         rsa_dec [9]
[13]     0.0    0.01    0.00     294         os2ip [13]
-----------------------------------------------
                0.00    0.01       2/2           genkeys [4]
[14]     0.0    0.00    0.01       2         euclid_inv [14]
                0.00    0.00      42/173345      mul_mo [2]
                0.00    0.00      21/21          qdiv [15]
                0.00    0.00      42/42          sub_mo [17]
                0.00    0.00       2/118264      highbit [10]
                0.00    0.00     132/1970        copy [19]
                0.00    0.00      23/938         zerop [22]
                0.00    0.00       4/920         load [23]
                0.00    0.00       4/1565        zero [20]
-----------------------------------------------
                0.00    0.00      21/21          euclid_inv [14]
[15]     0.0    0.00    0.00      21         qdiv [15]
                0.00    0.00     697/88754294     gte [7]
-----------------------------------------------
                0.00    0.00     147/294         rsa_enc [8]
                0.00    0.00     147/294         rsa_dec [9]
[16]     0.0    0.00    0.00     294         i2osp [16]
                0.00    0.00     294/118264      highbit [10]
-----------------------------------------------
                0.00    0.00      42/42          euclid_inv [14]
[17]     0.0    0.00    0.00      42         sub_mo [17]
                0.00    0.00      42/88754294     gte [7]
-----------------------------------------------
                0.00    0.00     308/116739      rabin_test [6]
                0.00    0.00  116431/116739      spow_nn [3]
[18]     0.0    0.00    0.00  116739         half [18]
-----------------------------------------------
                0.00    0.00       4/1970        load_miller_rabin [5]
                0.00    0.00       4/1970        genkeys [4]
                0.00    0.00     132/1970        euclid_inv [14]
                0.00    0.00    1830/1970        spow_nn [3]
[19]     0.0    0.00    0.00    1970         copy [19]
-----------------------------------------------
                0.00    0.00       4/1565        euclid_inv [14]
                0.00    0.00       4/1565        load_miller_rabin [5]
                0.00    0.00       9/1565        genkeys [4]
                0.00    0.00     294/1565        rsa_enc [8]
                0.00    0.00     294/1565        rsa_dec [9]
                0.00    0.00     960/1565        rabin_test [6]
[20]     0.0    0.00    0.00    1565         zero [20]
-----------------------------------------------
                0.00    0.00    1547/1547        rabin_test [6]
[21]     0.0    0.00    0.00    1547         equ [21]
-----------------------------------------------
                0.00    0.00      23/938         euclid_inv [14]
                0.00    0.00     915/938         spow_nn [3]
[22]     0.0    0.00    0.00     938         zerop [22]
-----------------------------------------------
                0.00    0.00       1/920         genkeys [4]
                0.00    0.00       4/920         euclid_inv [14]
                0.00    0.00     915/920         spow_nn [3]
[23]     0.0    0.00    0.00     920         load [23]
-----------------------------------------------
                0.00    0.00     109/730         load_miller_rabin [5]
                0.00    0.00     621/730         rabin_test [6]
[24]     0.0    0.00    0.00     730         addws [24]
-----------------------------------------------
                0.00    0.00     641/641         rabin_test [6]
[25]     0.0    0.00    0.00     641         subw [25]
-----------------------------------------------
                0.00    0.00     421/421         rabin_test [6]
[26]     0.0    0.00    0.00     421         evenp [26]
-----------------------------------------------
                0.00    0.00       8/8           load_miller_rabin [5]
[27]     0.0    0.00    0.00       8         set [27]
-----------------------------------------------
                0.00    0.00       4/4           genkeys [4]
[28]     0.0    0.00    0.00       4         mul [28]
-----------------------------------------------
                0.00    0.00       1/1           msgtest [1]
[29]     0.0    0.00    0.00       1         print_num [29]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [24] addws                  [23] load                    [8] rsa_enc
  [19] copy                    [5] load_miller_rabin      [27] set
  [21] equ                    [28] mul                     [3] spow_nn
  [14] euclid_inv              [2] mul_mo                 [17] sub_mo
  [26] evenp                  [12] oddp                   [25] subw
   [4] genkeys                [13] os2ip                  [11] subws
   [7] gte                    [29] print_num              [20] zero
  [18] half                   [15] qdiv                   [22] zerop
  [10] highbit                 [6] rabin_test
  [16] i2osp                   [9] rsa_dec
